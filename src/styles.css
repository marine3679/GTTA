/* You can add global styles to this file, and also import other style files */

@import '~@angular/material/prebuilt-themes/indigo-pink.css';
body {
    font-family: Roboto, Arial, sans-serif;
    margin: 0;
}

.basic-container {
    padding: 5px;
}

.version-info {
    font-size: 8pt;
    float: right;
}


/* scroll */

.custom-scroll::-webkit-scrollbar {
    width: 6px;
    background-color: #F5F5F5;
}

.custom-scroll::-webkit-scrollbar-thumb {
    background-color: #00000059;
}

.custom-scroll::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    background-color: #F5F5F5;
}


/* search input */

.field {
    --uiFieldPaddingTop: var(--fieldPaddingTop, 0px);
    --uiFieldPaddingRight: var(--fieldPaddingRight, 0px);
    --uiFieldPaddingBottom: var(--fieldPaddingBottom, 0px);
    --uiFieldPaddingLeft: var(--fieldPaddingLeft, 0px);
    --uiFieldBorderColor: var(--fieldBorderColor, transpatent);
    --uiFieldBorderTop: var(--fieldBorderTop, 0px);
    --uiFieldBorderRight: var(--fieldBorderRight, 0px);
    --uiFieldBorderBottom: var(--fieldBorderBottom, 0px);
    --uiFieldBorderLeft: var(--fieldBorderLeft, 0px);
    --uiFieldBgColor: var(--fieldBgColor, transpatent);
    --uiFieldPlaceholderColor: var(--fieldPlaceholderColor, #ffffff);
    --uiFieldAnimationDuration: var(--fieldAnimationDuration, .3s);
    --uiFieldFonstSize: var(--fieldFontSize, 16px);
    position: relative;
    display: block;
}

.field__input {
    width: 100%;
    box-sizing: border-box;
    background-color: var(--uiFieldBgColor);
    /* for iOS */
    appearance: none;
    border-radius: 0;
    border-style: solid;
    border-color: var(--uiFieldBorderColor);
    border-top-width: var(--uiFieldBorderTop);
    border-right-width: var(--uiFieldBorderRight);
    border-bottom-width: var(--uiFieldBorderBottom);
    border-left-width: var(--uiFieldBorderLeft);
    padding-top: var(--uiFieldPaddingTop);
    padding-right: var(--uiFieldPaddingRight);
    padding-bottom: var(--uiFieldPaddingBottom);
    padding-left: var(--uiFieldPaddingLeft);
    font-family: inherit;
    font-size: 100%;
    color: inherit;
}

.field__input::-webkit-input-placeholder {
    color: var(--uiFieldPlaceholderColor);
    opacity: 0;
}

.field__input::-moz-placeholder {
    color: var(--uiFieldPlaceholderColor);
    opacity: 0;
}

.field__input:focus {
    outline: none;
}

.field__input:focus::-webkit-input-placeholder {
    transition: opacity var(--uiFieldAnimationDuration) ease-out var(--uiFieldAnimationDuration);
    opacity: 1;
}

.field__input:focus::-moz-placeholder {
    transition: opacity var(--uiFieldAnimationDuration) ease-out var(--uiFieldAnimationDuration);
    opacity: 1;
}

.field__label-wrap {
    height: 100%;
    display: block;
}

.field__label {
    position: absolute;
    top: calc(0px + var(--uiFieldPaddingTop) + var(--uiFieldBorderTop));
    left: calc(0px + var(--uiFieldPaddingLeft) + var(--uiFieldBorderLeft));
    pointer-events: none;
    font-size: .9em;
    transition: top var(--uiFieldAnimationDuration) cubic-bezier(0.9, -0.15, 0.1, 1.15), opacity var(--uiFieldAnimationDuration) ease-out;
    will-change: top, opacity;
}

.field__input:not(:placeholder-shown)~.field__label-wrap .field__label {
    opacity: 0;
    top: calc(0px + var(--uiFieldPaddingTop) + var(--uiFieldBorderTop));
}

.field__input:focus~.field__label-wrap .field__label {
    opacity: 1;
    top: calc(-1 * calc(var(--uiFieldPaddingTop) + var(--uiFieldBorderTop) + 15px));
}


/* type1 */

.field_type1 {
    --uiFieldPaddingTop: var(--fieldPaddingTop, 15px);
    --uiFieldPaddingRight: var(--fieldPaddingRight, 15px);
    --uiFieldPaddingBottom: var(--fieldPaddingBottom, 15px);
    --uiFieldPaddingLeft: var(--fieldPaddingLeft, 15px);
    --uiFieldBorderTop: var(--fieldBorderTop, 2px);
    --uiFieldBorderRight: var(--fieldBorderRight, 2px);
    --uiFieldBorderBottom: var(--fieldBorderBottom, 2px);
    --uiFieldBorderLeft: var(--fieldBorderLeft, 2px);
}

.field_type1 .field__input {
    transition: border-color var(--uiFieldAnimationDuration) ease-out;
    will-change: border-color;
}

.field_type1 .field__input:focus {
    --uiFieldBorderColor: var(--fieldBorderColorActive);
}